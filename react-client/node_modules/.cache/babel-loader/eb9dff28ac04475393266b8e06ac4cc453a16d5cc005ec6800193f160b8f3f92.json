{"ast":null,"code":"var _jsxFileName = \"/Users/kennethjohn/Personal Docs/projects/greetings-gen/react-client/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// import { GreetingGenerationRequest, GreetingGenerationResponse } from './proto/greeting_service_pb';\n// import { ImageServiceClient } from './proto/Greeting_serviceServiceClientPb';\n// import { ClipLoader } from 'react-spinners';\n\n// function App() {\n//   const [imagePrompt, setImagePrompt] = useState('');\n//   const [messagePrompt, setMessagePrompt] = useState('');\n//   const [response, setResponse] = useState<GreetingGenerationResponse | null>(null);\n//   const [error, setError] = useState<string | null>(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const client = new ImageServiceClient(\"http://localhost:8080\");\n\n//   const handleSubmit = async () => {\n//     if (messagePrompt.length > 32) {\n//       setError(\"Message prompt should be 32 characters or less\");\n//       return;\n//     }\n\n//     const req = new GreetingGenerationRequest();\n//     req.setImagePrompt(imagePrompt);\n//     req.setMessagePrompt(messagePrompt);\n\n//     setLoading(true);\n//     setError(null);\n//     setResponse(null);\n\n//     try {\n//       const resp = await client.generateGreeting(req, {});\n//       setResponse(resp);\n//       setLoading(false);\n//     } catch (err) {\n//       setError(\"Failed to generate greeting\");\n//       console.error(err);\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Greeting Generator</h1>\n//         <div className=\"input-container\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter image prompt\"\n//             value={imagePrompt}\n//             onChange={(e) => setImagePrompt(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter message prompt (32 chars max)\"\n//             value={messagePrompt}\n//             onChange={(e) => setMessagePrompt(e.target.value)}\n//             maxLength={32}\n//           />\n//           <button onClick={handleSubmit}>Generate Greeting</button>\n//         </div>\n//         {loading && <ClipLoader color=\"#ffffff\" />}\n//         {error && <p className=\"error\">{error}</p>}\n//         {response && (\n//           <div className=\"response\">\n//             <img src={response.getImagePath()} alt=\"Generated Greeting\" />\n//           </div>\n//         )}\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { GreetingGenerationRequest } from './proto/greeting_service_pb';\nimport { ImageServiceClient } from './proto/Greeting_serviceServiceClientPb';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [messagePrompt, setMessagePrompt] = useState('');\n  const [imagePath, setImagePath] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const client = new ImageServiceClient(\"http://localhost:8080\");\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    if (messagePrompt.length > 32) {\n      setError(\"Message prompt should be 32 characters or less\");\n      return;\n    }\n    const req = new GreetingGenerationRequest();\n    req.setImagePrompt(imagePrompt);\n    req.setMessagePrompt(messagePrompt);\n    setLoading(true);\n    setError(null);\n    setImagePath(null);\n    try {\n      const resp = await client.generateGreeting(req, {});\n      setImagePath(resp.getImagePath());\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to generate greeting\");\n      console.error(err);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Greeting Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter image prompt\",\n            value: imagePrompt,\n            onChange: e => setImagePrompt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter message prompt (32 chars max)\",\n            value: messagePrompt,\n            onChange: e => setMessagePrompt(e.target.value),\n            maxLength: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Generate Greeting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }, this), imagePath && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: \"Generated Greeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZVW7k8CfBT2s0R+iNKKjABidjjw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","GreetingGenerationRequest","ImageServiceClient","ClipLoader","jsxDEV","_jsxDEV","App","_s","imagePrompt","setImagePrompt","messagePrompt","setMessagePrompt","imagePath","setImagePath","error","setError","loading","setLoading","client","handleSubmit","event","preventDefault","length","req","resp","generateGreeting","getImagePath","err","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","maxLength","color","href","rel","_c","$RefreshReg$"],"sources":["/Users/kennethjohn/Personal Docs/projects/greetings-gen/react-client/src/App.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// import { GreetingGenerationRequest, GreetingGenerationResponse } from './proto/greeting_service_pb';\n// import { ImageServiceClient } from './proto/Greeting_serviceServiceClientPb';\n// import { ClipLoader } from 'react-spinners';\n\n// function App() {\n//   const [imagePrompt, setImagePrompt] = useState('');\n//   const [messagePrompt, setMessagePrompt] = useState('');\n//   const [response, setResponse] = useState<GreetingGenerationResponse | null>(null);\n//   const [error, setError] = useState<string | null>(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const client = new ImageServiceClient(\"http://localhost:8080\");\n\n//   const handleSubmit = async () => {\n//     if (messagePrompt.length > 32) {\n//       setError(\"Message prompt should be 32 characters or less\");\n//       return;\n//     }\n\n//     const req = new GreetingGenerationRequest();\n//     req.setImagePrompt(imagePrompt);\n//     req.setMessagePrompt(messagePrompt);\n\n//     setLoading(true);\n//     setError(null);\n//     setResponse(null);\n\n//     try {\n//       const resp = await client.generateGreeting(req, {});\n//       setResponse(resp);\n//       setLoading(false);\n//     } catch (err) {\n//       setError(\"Failed to generate greeting\");\n//       console.error(err);\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Greeting Generator</h1>\n//         <div className=\"input-container\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter image prompt\"\n//             value={imagePrompt}\n//             onChange={(e) => setImagePrompt(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter message prompt (32 chars max)\"\n//             value={messagePrompt}\n//             onChange={(e) => setMessagePrompt(e.target.value)}\n//             maxLength={32}\n//           />\n//           <button onClick={handleSubmit}>Generate Greeting</button>\n//         </div>\n//         {loading && <ClipLoader color=\"#ffffff\" />}\n//         {error && <p className=\"error\">{error}</p>}\n//         {response && (\n//           <div className=\"response\">\n//             <img src={response.getImagePath()} alt=\"Generated Greeting\" />\n//           </div>\n//         )}\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { GreetingGenerationRequest, GreetingGenerationResponse } from './proto/greeting_service_pb';\nimport { ImageServiceClient } from './proto/Greeting_serviceServiceClientPb';\nimport { ClipLoader } from 'react-spinners';\n\nfunction App() {\n  const [imagePrompt, setImagePrompt] = useState('');\n  const [messagePrompt, setMessagePrompt] = useState('');\n  const [imagePath, setImagePath] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const client = new ImageServiceClient(\"http://localhost:8080\");\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    if (messagePrompt.length > 32) {\n      setError(\"Message prompt should be 32 characters or less\");\n      return;\n    }\n\n    const req = new GreetingGenerationRequest();\n    req.setImagePrompt(imagePrompt);\n    req.setMessagePrompt(messagePrompt);\n\n    setLoading(true);\n    setError(null);\n    setImagePath(null);\n\n    try {\n      const resp = await client.generateGreeting(req, {});\n      setImagePath(resp.getImagePath());\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to generate greeting\");\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Greeting Generator</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter image prompt\"\n              value={imagePrompt}\n              onChange={(e) => setImagePrompt(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter message prompt (32 chars max)\"\n              value={messagePrompt}\n              onChange={(e) => setMessagePrompt(e.target.value)}\n              maxLength={32}\n            />\n            <button type=\"submit\">Generate Greeting</button>\n          </div>\n        </form>\n        {loading && <ClipLoader color=\"#ffffff\" />}\n        {error && <p className=\"error\">{error}</p>}\n        {imagePath && (\n          <div className=\"response\">\n            <img src={imagePath} alt=\"Generated Greeting\" />\n          </div>\n        )}\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}